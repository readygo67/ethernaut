// SPDX-License-Identifier: MIT
pragma solidity ^0.6.0;


contract Exploit {
    // uint public magicNumber = 42;
    //bytes public selector; //0x650500c1

    //uint256 overflow before solidity 0.8.0
//    constructor () public payable {
//        selector =  abi.encodeWithSignature("whatIsTheMeaningOfLife()");
//    }

    function whatIsTheMeaningOfLife() public pure returns(uint256){
        return 42;
    }
}


/*
{
	"linkReferences": {},
	"object": "6080604052348015600f57600080fd5b5060888061001e6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063650500c114602d575b600080fd5b60336049565b6040518082815260200191505060405180910390f35b6000602a90509056fea264697066735822122084e6bb4e9fe7417d45f05bea65a85b7dd31074c89b5a840e545b0407fc1c324d64736f6c634300060c0033",
	"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x88 DUP1 PUSH2 0x1E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x650500C1 EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x33 PUSH1 0x49 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x2A SWAP1 POP SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP5 0xE6 0xBB 0x4E SWAP16 0xE7 COINBASE PUSH30 0x45F05BEA65A85B7DD31074C89B5A840E545B0407FC1C324D64736F6C6343 STOP MOD 0xC STOP CALLER ",
	"sourceMap": "58:360:0:-:0;;;;;;;;;;;;;;;;;;;"
}
*/