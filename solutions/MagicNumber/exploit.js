const Web3 =require("web3");
const Magic = require("./abis/MagicNumber.json");
const web3 = new Web3('http://127.0.0.1:8545');
const MagicAddr = "0x5FbDB2315678afecb367f032d93F642f64180aa3";
const magic = new web3.eth.Contract(Magic.abi, MagicAddr);
/*
initCode
600a //push 0x0a into stack, 0x0a = runtime codesize
600c //push 0xxx into stakc, 在byteCode中，runtimecode的起始位置 = creationCode 的长度，这里是0x0C
6080 //
39   //把memory[0x80, 0x80+0x0a] = bytecode[0xxx, 0xxx+0x0a], 将runtimecode 拷贝到memory中去, COPYCODE

600a //push 0x0a into stack, 此处必须是runtimecode 的长度，如果大于runtimecode的长度，EVM 将会padding 0
6080 //push 0x80 into stack, memory position of return value
f3   //return return memoryp[80, 80+20] as the

//Runtime Code
602a //push 0x2a into stack, 返回值
6080 //push 0x80 into stakck, memory中存放返回值的位置。
52   //mstore  memory[0x80]=0x2a
6020 //push 0x20 into stack, size of return value, 此处必须是0x20, 因为whatIsTheMeaningOfLife 的返回值类型是bytes32。
6080 //push 0x80 into stack, memory position of return value
f3   //return return memoryp[80, 80+20] as the value
*

return 的时候有两个参数 [offset, length], return mem[offset:offset+lenth]
//当 600a 写成6020的时候，EVM会在剩余的长度padding 0，返回的code 如下
> await web3.eth.getCode("0xe7f1725e7734ce288f8367e1bb143e90bb3f0512");
'0x602a60805260206080f300000000000000000000000000000000000000000000'

//当 600a 写成600a的时候，返回的code 如下
> await web3.eth.getCode("0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0");
'0x602a60805260206080f3'
>

* */
const bytecode = '600a600c608039600a6080f3602a60805260206080f3'

async  function main() {

    let accounts = await web3.eth.getAccounts();
    let tx = await web3.eth.sendTransaction({from: accounts[0], data:bytecode});
    console.log(tx.transactionHash);
    console.log(tx.contractAddress);

    let success = await magic.methods.validate(tx.contractAddress).call();
    console.log("success:%s", success);

}

main()